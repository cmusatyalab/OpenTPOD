# opentpod nginx site conf
upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server opentpod:8000 fail_timeout=0;
}

server {
    # listen on port 80
    listen 80 deferred;

    client_max_body_size 1G;

    # we don't really need a root here, but we might copy index.html
    # so that django doesn't need to.
    root /var/www;
    index index.html;

    keepalive_timeout 5;

    # x-sendfile
    location /protected {
        internal;
        alias /var/lib/openTPOD;
    }

    # already handled by "try_files $uri ..." in the next block
    #location /static {
    #    alias /var/www/static;
    #}

    # redirect to index.html for client-side routing
    # without this, when a user hits refresh, the client-side does not
    # load react-router yet, therefore not able to render the correct view
    # https://tylermcginnis.com/react-router-cannot-get-url-refresh/
    location / {
        # actually doing this in Django now because we needed it for the
        # development server anyway
        # if (!-e $request_filename){
        #     rewrite ^(.*)$ /index.html break;
        # }
        try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://app_server;
    }
}
