# base docker-compose.yml
# use with docker-compose.override.yml for development
#   docker-compose up -d
#
# or with docker-compose.prod.yml for production
#   docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
#
version: "3.2"
volumes:
    opentpod-data-var:
    opentpod-db-data:
    opentpod-redis-data:
    opentpod-www-static:
services:
    opentpod-db:
        container_name: opentpod-db
        image: postgres:12.0-alpine
        restart: always
        volumes:
            - opentpod-db-data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: root
            POSTGRES_DB: opentpod
            POSTGRES_PASSWORD: ${OPENTPOD_DB_PASSWORD}
    opentpod-redis:
        container_name: opentpod-redis
        image: redis:4.0.5-alpine
        command: --appendonly yes --requirepass "${OPENTPOD_REDIS_PASSWORD}"
        restart: always
        volumes:
            - opentpod-redis-data:/data
    opentpod: &opentpod-djangoapp
        container_name: opentpod
        image: opentpod:stable
        volumes:
            - opentpod-data-var:/root/openTPOD/var
        environment:
            - DJANGO_ALLOWED_HOSTS
            - DJANGO_SECRET_KEY
            - DJANGO_DEBUG=false
            - PYTHONDONTWRITEBYTECODE=1
            - REDIS_URL=redis://:${OPENTPOD_REDIS_PASSWORD}@opentpod-redis:6379/0
            - REDIS_CACHE_URL=redis://:${OPENTPOD_REDIS_PASSWORD}@opentpod-redis:6379/1
            - DATABASE_URL=postgres://root:${OPENTPOD_DB_PASSWORD}@opentpod-db:5432/opentpod
        depends_on:
            - opentpod-db
            - opentpod-redis
    opentpod-worker:
        <<: *opentpod-djangoapp
        container_name: opentpod-worker
